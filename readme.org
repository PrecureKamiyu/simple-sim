* 设计

[[file:1.drawio.svg]]

- [X] configuration loader
- [X] device
- [X] device context
- [ ] device manager
- [X] main program
- [ ] network manager
- [ ] offloader
- [ ] orchestrator
- [ ] scheduler
- [X] task
- [X] task manager

* roadmap

** 任务的生命周期

  - Generated by TaskManager
  - Passed to devices; and controlled by TaskManager
  - Runned by devices; belonging is changed by TaskManager
  - Whose status can be changed by
    - TaskManager
    - Devices

** 任务管理

- 任务上传
- 任务回传
- 任务调度

** 设备管理

- 动态？无须动态
- 移动管理：物理位置上的移动

** 网络管理

方案未定。

如何模拟网络关系，如何模拟传输？

** 设置管理

设置管理

1. 实验设置：iteration 次数等
2. 场景设置：设备数量、分布，任务生成方法
3. 设备设置：设备的规格型号，包括存储空间、算力等

* todo [0/3]

** TODO 服务器设计实例

  - 任务队列
  - 核数：例如 4 CPU 核 = 4 个单核服务器，分别维护一个任务队列
  - 两层：存储空间和 CPU 循环数（算力）
  - 坐标、覆盖范围

** TODO 上传和回传

上传：尽可能真实地模拟终端和服务器之间的通信。通信方式：频分多址。
回传：结果回传，注意终端和边缘服务器之间的连接关系的改变

** TODO 分点

  - [ ] 上传：尽可能真实地模拟终端和服务器之间的通信。
    频分多址：通信方式
  - [ ] 迁移：迁移的代价，负载均衡，执行时间
  - [ ] 回传：结果回传，注意终端和边缘服务器之间的连接关系的改变

* COMMENT log

** [2024-12-01 Sun] 正在设计对任务的运行的模拟

** [2024-11-27 Wed] Aider 真不好用，基本的一些 roadmap

进度其实倒退了，AI 真是难用。基本上时间都花在了给 AI 擦屁股上面。真是羞耻。在国内用 AI 也是折磨……麻烦……

基本框架上面是倒退了，但是更加模块化了。现在应当多计划一下就行。计划如下：

1. 完成对 device 任务执行的模拟
2. 完成对 task 上传、执行、传递、回传的过程的处理

** [2024-11-21 Thu] 基本框架实现了

其实设计就体现在图里面了。因为自己已经熟知了就不需要过多解释了。
